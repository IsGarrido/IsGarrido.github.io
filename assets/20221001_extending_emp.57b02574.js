import{d as s,c as a,a as e,o}from"./index.17f7cf38.js";const t="/assets/emp1.e37e166b.png",c="/assets/vynill.53de958d.png",p="/assets/emp2.0307e287.png",l={class:"markdown-body"},i=e('<p>Lately, I usually shop at the website EMP, where you can find alternative-ish clothes. They are always in some sort of promotion, f.ex you can browse a big part of their catalog at some discount and add some extra discount if you get to some quantity. The discounts change from time to time but look like they often do some heavy discounts to stock out older products, so you can find products at 40% cut, some weeks later without a discount, some weeks later at 60% cut, and so on. The second discount varies after some days (maybe a week?). It is usually around 20% to 25% if you reach some quantity, usually 25\u20AC if you get to 100\u20AC, 15\u20AC when you get to 60\u20AC, mostly the same discount but changing a bit the threshold.</p><p><img src="'+t+`" alt="emp main page"></p><p>The big issue with the site is that they have a huge catalog, you can filter a bit to reduce the noise but still, you will have some pages to review. Let\u2019s improve this with some user script. The first step, install either TamperMonkey for chrome related browsers or GreaseMonkey for Mozilla. Now go to a page on the site and create a new script.</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token comment">// ==UserScript==</span></code>
<code class="code-line even line-2"><span class="token comment">// @name         New Userscript</span></code>
<code class="code-line odd line-3"><span class="token comment">// @namespace    http://tampermonkey.net/</span></code>
<code class="code-line even line-4"><span class="token comment">// @version      0.1</span></code>
<code class="code-line odd line-5"><span class="token comment">// @description  try to take over the world!</span></code>
<code class="code-line even line-6"><span class="token comment">// @author       You</span></code>
<code class="code-line odd line-7"><span class="token comment">// @match        https://www.emp-online.es/deal/?prefn1=calculatedGender&amp;prefv1=58829%7C58832&amp;srule=top-sellers&amp;ptype=sale</span></code>
<code class="code-line even line-8"><span class="token comment">// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=emp-online.es</span></code>
<code class="code-line odd line-9"><span class="token comment">// @grant        none</span></code>
<code class="code-line even line-10"><span class="token comment">// ==/UserScript==</span></code>
<code class="code-line odd line-11"></code>
<code class="code-line even line-12"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-13">    <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span></code>
<code class="code-line even line-14"></code>
<code class="code-line odd line-15">    <span class="token comment">// Your code here...</span></code>
<code class="code-line even last-row line-16"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div></div><p>The default script looks like this, let\u2019s tweak it a bit the metadata and give it a proper name and author, also it is important to use a wildcard to match every page on the site and not just the precise URL that we had opened when the script was created. Changed lines:</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token comment">// @name         EMP Show Discount</span></code>
<code class="code-line even line-2"><span class="token comment">// @author       IGM</span></code>
<code class="code-line odd last-row line-3"><span class="token comment">// @match        https://www.emp-online.es/*</span></code></pre></div></div><p>I will use jquery as it will be easier, so let\u2019s import it. We can import it as a script attaching it to the webpage body but it is easier to add this line to the user script metadata so it does the work for us.</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token comment">// @require https://code.jquery.com/jquery-3.6.0.min.js</span></code></pre></div></div><p>We want to find and render the discount for every product. After inspecting the HTML, both are inside a div with the class \u201Cprice-sale\u201D aka \u201C.price-sale\u201D. Inside we want to get the base price with \u201C.price-standard\u201D and the sale price with \u201C.price-sale\u201D. Let\u2019s retrieve them:</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.product-price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">idx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2"></code>
<code class="code-line odd line-3">    <span class="token keyword">let</span> $x <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-4"></code>
<code class="code-line odd line-5">    <span class="token keyword">let</span> salesNode <span class="token operator">=</span>  $x<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.price-sale&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-6">    <span class="token keyword">if</span><span class="token punctuation">(</span>salesNode<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-7">        <span class="token keyword">return</span> <span class="token punctuation">;</span></code>
<code class="code-line even line-8"></code>
<code class="code-line odd line-9">    <span class="token keyword">let</span> stdPrice <span class="token operator">=</span> $x<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.price-standard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">;</span></code>
<code class="code-line even line-10">    <span class="token keyword">let</span> salesPrice <span class="token operator">=</span> $x<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.price-sale&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">;</span></code>
<code class="code-line odd line-11"></code>
<code class="code-line even line-12">    <span class="token comment">//console.log(stdPrice, salesPrice);</span></code>
<code class="code-line odd last-row line-13"><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div></div><p>After that we will clean the retrieved text and make some math to calculate the price, we can start running this in our chrome console with some console.log to see how it works.</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.product-price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">idx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2"></code>
<code class="code-line odd line-3">    <span class="token comment">// ...</span></code>
<code class="code-line even line-4"></code>
<code class="code-line odd line-5">    <span class="token keyword">let</span> nPrice <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>stdPrice<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;Desde &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-6">    <span class="token keyword">let</span> nSales <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>salesPrice<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-7">    <span class="token keyword">let</span> nDisco <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token punctuation">(</span>nSales<span class="token operator">/</span>nPrice<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">;</span></code>
<code class="code-line even line-8">    <span class="token keyword">let</span> sDisco <span class="token operator">=</span> nDisco<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-9"></code>
<code class="code-line even last-row line-10"><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div></div><p>We will append a blue tag after the discounted price with the discount percentage. But to make it easier to find heavily discounted items we will make the font grow as the discount grows:</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.product-price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">idx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2"></code>
<code class="code-line odd line-3">    <span class="token comment">// ...</span></code>
<code class="code-line even line-4"></code>
<code class="code-line odd line-5">    <span class="token keyword">let</span> maxSize <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span></code>
<code class="code-line even line-6">    <span class="token keyword">let</span> minSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-7">    <span class="token keyword">let</span> diff <span class="token operator">=</span> maxSize <span class="token operator">-</span> minSize<span class="token punctuation">;</span></code>
<code class="code-line even line-8"></code>
<code class="code-line odd line-9">    <span class="token keyword">let</span> r3 <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nDisco <span class="token operator">*</span> diff<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> minSize<span class="token punctuation">;</span></code>
<code class="code-line even line-10"></code>
<code class="code-line odd line-11"></code>
<code class="code-line even line-12">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>nDisco<span class="token punctuation">)</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stdPrice<span class="token punctuation">,</span> nPrice<span class="token punctuation">,</span> nSales<span class="token punctuation">,</span> nDisco<span class="token punctuation">,</span> sDisco<span class="token punctuation">,</span> r3<span class="token punctuation">)</span></code>
<code class="code-line odd line-13"></code>
<code class="code-line even line-14">    $x<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;span class=&quot;nDisco&quot; style=&quot;color: white; background-color: #0088ff; margin-left: 5px; padding: 0 10px; font-weight: bold; font-size: </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> r3 <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">px;&quot;&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> sDisco <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;/span&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-15"></code>
<code class="code-line even last-row line-16"><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div></div><p><img src="`+c+`" alt="emp vynill page"></p><p>Finally, let\u2019s attach the script so it runs once after the page loads and it will also run every time we scroll. To avoid the code running a hundred times every time we scroll we will debounce the method call. This way, it will run only once every time we scroll and will group every new function call until 3 seconds without new calls passes.</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token keyword">let</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2">  <span class="token keyword">let</span> timerId<span class="token punctuation">;</span></code>
<code class="code-line odd line-3">  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-4">    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-5">    timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-6">      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-7">    <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-8">  <span class="token punctuation">}</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-9"><span class="token punctuation">}</span></code>
<code class="code-line even line-10"></code>
<code class="code-line odd line-11"><span class="token keyword">let</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></code>
<code class="code-line even line-12">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.product-price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">idx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-13">    <span class="token comment">// ...</span></code>
<code class="code-line even line-14">    <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-15"><span class="token punctuation">}</span></code>
<code class="code-line even line-16"></code>
<code class="code-line odd line-17"><span class="token keyword">let</span> debouncedRun <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span>run<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-18"><span class="token function">setTimeout</span><span class="token punctuation">(</span> debouncedRun<span class="token punctuation">,</span> <span class="token number">3000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd last-row line-19">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;scroll&quot;</span><span class="token punctuation">,</span> debouncedRun<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div></div><p><img src="`+p+`" alt="emp main page"></p><p>Putting everything together:</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">javascript</span></div><div class="code-block language-javascript no-line-numbers" data-lang="javascript" data-modifiers=""><pre class="language-javascript" data-lang="javascript"><code class="code-line odd first-row line-1"><span class="token comment">// ==UserScript==</span></code>
<code class="code-line even line-2"><span class="token comment">// @name         EMP Show Discount</span></code>
<code class="code-line odd line-3"><span class="token comment">// @namespace    http://tampermonkey.net/</span></code>
<code class="code-line even line-4"><span class="token comment">// @version      0.1</span></code>
<code class="code-line odd line-5"><span class="token comment">// @description  try to take over the world!</span></code>
<code class="code-line even line-6"><span class="token comment">// @author       IGM</span></code>
<code class="code-line odd line-7"><span class="token comment">// @match        https://www.emp-online.es/*</span></code>
<code class="code-line even line-8"><span class="token comment">// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=emp-online.es</span></code>
<code class="code-line odd line-9"><span class="token comment">// @grant        none</span></code>
<code class="code-line even line-10"><span class="token comment">// ==/UserScript==</span></code>
<code class="code-line odd line-11"></code>
<code class="code-line even line-12"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-13">    <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span></code>
<code class="code-line even line-14"></code>
<code class="code-line odd line-15">    <span class="token comment">// Your code here...</span></code>
<code class="code-line even line-16"></code>
<code class="code-line odd line-17">    <span class="token keyword">let</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-18">        <span class="token keyword">let</span> timerId<span class="token punctuation">;</span></code>
<code class="code-line odd line-19">        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-20">            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-21">            timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-22">            <span class="token function">callback</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-23">            <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-24">        <span class="token punctuation">}</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-25">    <span class="token punctuation">}</span></code>
<code class="code-line even line-26"></code>
<code class="code-line odd line-27">   <span class="token keyword">let</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></code>
<code class="code-line even line-28">       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.nDisco&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-29"></code>
<code class="code-line even line-30">       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.product-price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">idx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-31"></code>
<code class="code-line even line-32">           <span class="token keyword">let</span> $x <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-33"></code>
<code class="code-line even line-34">           <span class="token keyword">let</span> salesNode <span class="token operator">=</span>  $x<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.price-sale&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-35">           <span class="token keyword">if</span><span class="token punctuation">(</span>salesNode<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span></code>
<code class="code-line even line-36">               <span class="token keyword">return</span> <span class="token punctuation">;</span></code>
<code class="code-line odd line-37"></code>
<code class="code-line even line-38">           <span class="token keyword">let</span> stdPrice <span class="token operator">=</span> $x<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.price-standard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">;</span></code>
<code class="code-line odd line-39">           <span class="token keyword">let</span> salesPrice <span class="token operator">=</span> $x<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.price-sale&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">;</span></code>
<code class="code-line even line-40"></code>
<code class="code-line odd line-41">           <span class="token keyword">let</span> nPrice <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>stdPrice<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;Desde &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-42">           <span class="token keyword">let</span> nSales <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>salesPrice<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-43">           <span class="token keyword">let</span> nDisco <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token punctuation">(</span>nSales<span class="token operator">/</span>nPrice<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">;</span></code>
<code class="code-line even line-44">           <span class="token keyword">let</span> sDisco <span class="token operator">=</span> nDisco<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-45"></code>
<code class="code-line even line-46">           <span class="token keyword">let</span> maxSize <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-47">           <span class="token keyword">let</span> minSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></code>
<code class="code-line even line-48">           <span class="token keyword">let</span> diff <span class="token operator">=</span> maxSize <span class="token operator">-</span> minSize<span class="token punctuation">;</span></code>
<code class="code-line odd line-49"></code>
<code class="code-line even line-50">           <span class="token keyword">let</span> r3 <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nDisco <span class="token operator">*</span> diff<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> minSize<span class="token punctuation">;</span></code>
<code class="code-line odd line-51"></code>
<code class="code-line even line-52">           $x<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;span class=&quot;nDisco&quot; style=&quot;color: white; background-color: #0088ff; margin-left: 5px; padding: 0 10px; font-weight: bold; font-size: </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> r3 <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">px;&quot;&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> sDisco <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;/span&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-53"></code>
<code class="code-line even line-54">       <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-55"></code>
<code class="code-line even line-56">   <span class="token punctuation">}</span></code>
<code class="code-line odd line-57"></code>
<code class="code-line even line-58">    <span class="token keyword">let</span> debouncedRun <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span>run<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-59">    <span class="token function">setTimeout</span><span class="token punctuation">(</span> debouncedRun<span class="token punctuation">,</span> <span class="token number">3000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line even line-60">    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;scroll&quot;</span><span class="token punctuation">,</span> debouncedRun<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>
<code class="code-line odd line-61"></code>
<code class="code-line even last-row line-62"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div></div><p>Once we have it running we could f.ex hide the items that are under a 25% discount or try to sort them by discount or similar ideas. Finally, let\u2019s push it to GitHub to have it as a backup.</p>`,21),u=[i],g={},v="",w=s({__name:"20221001_extending_emp",setup(d,{expose:n}){return n({frontmatter:{},excerpt:void 0}),(k,r)=>(o(),a("div",l,u))}});export{w as default,v as excerpt,g as frontmatter};
