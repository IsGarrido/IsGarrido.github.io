import{d as t,c as a,a as o,o as s}from"./index.17f7cf38.js";const i="/assets/sg2012.51c1face.png",r="/assets/sg2012stats.7c9cffc5.png",n="/assets/bigNumbersDontLie.8ee2d7b7.png",h="/assets/capture.ea2b0b3f.png",l={class:"markdown-body"},u=o('<p>This happened about 9 years ago. I discovered the popular site <a href="https://steamgifts.com" class="external-link" target="_blank" rel="noreferrer noopener">Steam Gifts</a>. This website was used to create giveaways for Steam games serial keys. After Humble bundle popularized the cheap game bundles, lots of new websites appeared into the bushiness. When getting one of those game packs, it was pretty frequent to have some games in the pack that either yo didn\u2019t like or that you already had, either from another bundle or from a previous purchase. What could you do with those keys? You gave them away in the Steam Gifts website and in exchange you level up and this was supposed to help you get into more restricted giveaways, so you give your extra keys to be able to win someone extra keys. This is how Steam Gifts looked:</p><p><img src="'+i+'" alt="./20220811_steam_gifts/sg2012.png"></p><p>How famous was the site? How many giveaways were created each day? According to their stats, a lot. The following graph shows the number of giveaways created each month, the spike starts on June 2012 (16.472) and keeps growing until the local maximum on December 2012 (29.984). This means that on June were created 533 giveaways (mean) up to December with a mean of 967. This number are pretty important for the exploit.</p><p><img src="'+r+'" alt="./20220811_steam_gifts/sg2012stats.png"></p><p>To enter the giveaways you needed points, every time someone created a giveaway on the site, everyone would receive a number of points equivalent to the 10% of the value of the game. For example a game that costs 60 dollars would give everyone 6 points and would require 60 points to enter the giveaway. This is the first clue. The second clue is in the next screenshot, in the number of entries on the giveaway.</p><p><img src="'+n+'" alt="./20220811_steam_gifts/bigNumbersDontLie.png"></p><p>How can a giveaway have such a big quantity of entries? Are there more than that <code>4294967295</code> people on the earth? Probably not on this website. Why is such a big number appearing? I can\u2019t really tell what this number were but I can explain what were my thoughts at this point, I knew that this big number was not meant to appear, probably some other thing represented as that number. I came from PHP programming where some functions returned <code>-1</code> to tell you that something was not found or some sort of an error, so I started testing this, I got into Cheat Engine, attach it to a random process and search for -1, the program converted it to <code>4294967295</code>, so this could be <code>-1</code>. This is also the <code>unsigned int</code> max value, but if you read it as a <code>(signed) int</code>, it is a <code>-1</code>. And this was the second clue solved. The next question is, how do you manage to break the number of entries of a giveaway to such number? You either <code>overflow</code> it or <code>underflow</code> it, given that the number of entries of the giveaways is not that high, <code>underflow</code> sounds easier, so instead of entering into a giveaway, let\u2019s exit it.</p><p><img src="'+h+'" alt="./20220811_steam_gifts/capture.png"></p><p>This capture above me, shows the exploit working and the page where you were able to remove yourself from any giveaway and claim back the points that you used. My first test here was, lets just rapidly hit the mouse over the <strong>Remove entry</strong> button. And like that, in my first try I got twice the points I should. After that I tried some software that would launch lots of click each seconds, the result was the same, I was getting back the points but multiple times, sometimes 30 points would become 270.</p><p>I can\u2019t really tell what was happening but here is my theory: The website was really really slow from time to time. If you see the previous chart, they got lots of new users and new giveaways in a short period of time, their servers were not able handle this many users. Every time a giveaway was created, a massive database update was performed to add points for every user, this was killing the database. They would later on fix this by performing updates only every 15 minutes were they would group all the points to add <a href="https://www.steamgifts.com/discussion/9cWgD/point-system-updates" class="external-link" target="_blank" rel="noreferrer noopener">Point System Updates</a>. So this is confirmed to be part of it.</p><p>The final issue, lack of database transactions, the process of getting out of a giveaway would be about 4 simple queries: - Check if the user X is on the giveaway Y. -&gt; TRUE, continue - Grab the number of points N of the giveaway Y. - Give the user X a total of N points. - Remove the user X from the giveaway Y -&gt; OK, 1 row removed.</p><p>If the database is receiving multiple queries in parallel and running really slow, this could run some like if we think on launching 8 request:</p><ul><li>Thread 1: Check if the user X is on the giveaway Y. -&gt; TRUE, continue</li><li>Thread 2: Check if the user X is on the giveaway Y. -&gt; TRUE, continue</li><li>Thread 3: Check if the user X is on the giveaway Y. -&gt; TRUE, continue</li><li>Thread 1: Grab the number of points N of the giveaway Y.</li><li>Thread 2: Grab the number of points N of the giveaway Y.</li><li>Thread 4: Check if the user X is on the giveaway Y. -&gt; TRUE, continue</li><li>Thread 3: Grab the number of points N of the giveaway Y.</li><li>Thread 1: Give the user X a total of N points.</li><li>Thread 2: Give the user X a total of N points.</li><li><strong>Thread 1: Remove the user X from the giveaway Y -&gt; OK, 1 rows removed</strong></li><li><strong>Thread 5: Check if the user X is on the giveaway Y. -&gt; FALSE, exit</strong></li><li>Thread 2: Remove the user X from the giveaway Y -&gt; OK, 0 rows removed.</li><li>Thread 4: Grab the number of points N of the giveaway Y.</li><li>Thread 3: Give the user X a total of N points.</li><li>Thread 4: Give the user X a total of N points.</li><li>Thread 3: Remove the user X from the giveaway Y -&gt; OK, 0 rows removed.</li><li>Thread 4: Remove the user X from the giveaway Y -&gt; OK, 0 rows removed.</li><li>Thread 6: Check if the user X is on the giveaway Y. -&gt; FALSE, exit</li><li>Thread 7: Check if the user X is on the giveaway Y. -&gt; FALSE, exit</li><li>Thread 8: Check if the user X is on the giveaway Y. -&gt; FALSE, exit</li></ul><p>Everything happening before one of the threads removes the user from the giveaway was passing the first check and therefore getting extra points. The last step was automating it with a bit of javascript, at this point I was mostly learning how to code in javascript so it was messy. My selected choice was the now defunct <a href="https://github.com/ariya/phantomjs" class="external-link" target="_blank" rel="noreferrer noopener">PhantomJS</a>, a programable headless web browser. Nowadays a would use Playwright that is the modern alternative to it. The task was simple, go to the entered giveaways page, hit one button a lot to grab points, go to the main page and get into every giveaway until you run out of points, then get back to the get more points.</p><p>In one of the previous captures you can see 17 pages or concurrent entered giveaways, a total of 423. We already got the number of giveaways created each day (between 533 and 967), still not all of them were public, so not that much, I would say between 400 and 500 public giveaways each day. Each day I run the script with two accounts, I won one game each day (some days I won none, some others I got 3, a mean of about one). By looking into the number of entries you could see everything from 300 entries to 1500 or more. My guess is that there was a mean of about 800 entries per giveaway, so 400 entered * 2 =&gt; about 800 entries each day, divided by 800 entries on each one, the probability of winning one game every day was 100% -&gt; about one game. This is just some cheap numbers to understand why I was getting about 6 to 8 games each week.</p><p>This is it.</p>',16),g=[u],w={},y="",f=t({__name:"20220811_steam_gifts",setup(d,{expose:e}){return e({frontmatter:{},excerpt:void 0}),(c,m)=>(s(),a("div",l,g))}});export{f as default,y as excerpt,w as frontmatter};
